#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NUFU 1
#define SYM 2
#define NAV 3
#define MED 4
#define POI 5
#define SCR 6
#define SNI 7

&sl { release-after-ms = <250>; };

&mt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <150>;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    #include "combos.dtsi"

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
  &none &none &none &none &none &none &none &none &none &none &none &none
  &none &kp Q  &kp W        &kp E          &kp R         &kp T              &kp Y        &kp U          &kp I         &kp O        &kp P &none
  &none &kp A  &hml LALT S  &hml LSHIFT D  &hml LCTRL F  &hml LEFT_GUI G    &hmr RGUI H  &hmr RSHFT J   &hmr RCTRL K  &hmr RALT L  &kp APOSTROPHE &none
  &none &kp Z  &kp X        &kp C          &kp V         &kp B              &kp N        &kp M          &kp COMMA     &kp DOT      &kp SLASH &none
                      &mo 3          &mo 1         &lt 2 ENTER        &kp SPACE    &kp BACKSPACE
            >;
        };

        Navigation {
            label = "Navigation";
            bindings = <
  &kp ESCAPE  &none     &kp PAGE_UP    &none    &none      &kp RC(PG_UP)      &none     &kp UP_ARROW      &none              &kp DELETE
  &none       &kp HOME  &kp PAGE_DOWN  &kp END  &kp TAB    &kp RC(PAGE_DOWN)  &kp LEFT  &kp DOWN          &kp RIGHT          &none
  &none       &none     &none          &none    &none      &none              &none     &kp RA(RC(LEFT))  &kp RA(RC(RIGHT))  &none
                        &trans         &trans   &trans     &trans             &trans
            >;
        };

        Symbol {
            label = "Symbol";
            bindings = <
  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6  &kp N7            &kp N8             &kp N9         &kp N0
  &none         &kp GRAVE     &kp MINUS     &kp EQUAL     &none     &none         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp SEMICOLON
  &none         &none         &none         &none         &none     &none         &none             &none              &none          &none
                              &trans        &trans        &trans    &trans        &trans
            >;
        };

        Media {
            label = "Media";
            bindings = <
  &kp F1  &kp F2                 &kp F3                 &kp F4                 &kp F5    &kp F6          &kp F7        &kp F8        &kp F9        &kp F10
  &mo 4   &kp LS(LA(LC(LEFT)))   &kp LA(LC(LS(ENTER)))  &kp LS(LA(LC(RIGHT)))  &none     &none           &mkp MB1      &mkp MB3      &mkp MB2      &none
  &none   &kp LS(LA(LC(MINUS)))  &kp LS(LA(LC(SPACE)))  &kp LA(LC(LS(EQUAL)))  &none     &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 4
                                 &trans                 &trans                 &trans    &trans          &trans
            >;
        };

        Scroll {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;

            label = "Scroll";
        };
    };
};
